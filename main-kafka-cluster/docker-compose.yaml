version: "3.5"

x-kafka-common: &kafka-common
  image: confluentinc/cp-kafka:7.4.4
  restart: always
  networks:
    - confluent
  environment:
    &kafka-common-env
    KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    KAFKA_DELETE_TOPIC_ENABLE: "true"
    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL_SASL_SSL:SASL_SSL,EXTERNAL_SASL_SSL:SASL_SSL
    KAFKA_SSL_CLIENT_AUTH: "required"
    KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
    KAFKA_SUPER_USERS: "User:admin"
    KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf"
    KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
    KAFKA_AUTHORIZER_CLASS_NAME: "kafka.security.authorizer.AclAuthorizer"
    KAFKA_ZOOKEEPER_SET_ACL: "true"
    KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    restart: always
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - data-zookeeper-log-1:/var/lib/zookeeper/log
      - data-zookeeper-data-1:/var/lib/zookeeper/data
      - ./sasl-ssl-properties/kafka-creds/zookeeper.sasl.jaas.conf:/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf
    networks:
      - confluent
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_REQUIRE_CLIENT_AUTH_SCHEME: "sasl"
      ZOOKEEPER_AUTH_PROVIDER_1: "org.apache.zookeeper.server.auth.SASLAuthenticationProvider"
      ZOOKEEPER_SASL_ENABLED: "true"
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf
        -Dquorum.cnxn.threads.size=20
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dzookeeper.allowSaslFailedClients=false
        -DjaasLoginRenew=3600000

  kafka-1:
    <<: *kafka-common
    container_name: kafka-1
    hostname: kafka-1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9094:9094"
    volumes:
      - data-kafka-1:/var/lib/kafka/data
      - ./sasl-ssl-properties/kafka-creds/kafka-1/sasl:/etc/kafka/jaas
      - ./sasl-ssl-properties/kafka-creds/kafka-1/certs:/etc/kafka/secrets
      - ./sasl-ssl-properties/client.properties:/etc/kafka/client.properties
      - ./sasl-ssl-properties/user.properties:/etc/kafka/user.properties
    environment:
      <<: *kafka-common-env
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,INTERNAL_SASL_SSL://0.0.0.0:9093,EXTERNAL_SASL_SSL://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,INTERNAL_SASL_SSL://kafka-1:9093,EXTERNAL_SASL_SSL://localhost:9094
      KAFKA_SSL_KEYSTORE_FILENAME: "kafka-1.keystore.jks"
      KAFKA_SSL_KEYSTORE_CREDENTIALS: "kafka-1_keystore_creds"
      KAFKA_SSL_KEY_CREDENTIALS: "kafka-1_sslkey_creds"
      KAFKA_SSL_TRUSTSTORE_FILENAME: "kafka-1.truststore.jks"
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: "kafka-1_truststore_creds"

  kafka-2:
    <<: *kafka-common
    container_name: kafka-2
    hostname: kafka-2
    depends_on:
      - zookeeper
    ports:
      - "9192:9192"
      - "9193:9193"
      - "9194:9194"
    volumes:
      - data-kafka-2:/var/lib/kafka/data
      - ./sasl-ssl-properties/kafka-creds/kafka-2/sasl:/etc/kafka/jaas
      - ./sasl-ssl-properties/kafka-creds/kafka-2/certs:/etc/kafka/secrets
    environment:
      <<: *kafka-common-env
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9192,INTERNAL_SASL_SSL://0.0.0.0:9193,EXTERNAL_SASL_SSL://0.0.0.0:9194
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9192,INTERNAL_SASL_SSL://kafka-2:9193,EXTERNAL_SASL_SSL://localhost:9194
      KAFKA_SSL_KEYSTORE_FILENAME: "kafka-2.keystore.jks"
      KAFKA_SSL_KEYSTORE_CREDENTIALS: "kafka-2_keystore_creds"
      KAFKA_SSL_KEY_CREDENTIALS: "kafka-2_sslkey_creds"
      KAFKA_SSL_TRUSTSTORE_FILENAME: "kafka-2.truststore.jks"
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: "kafka-2_truststore_creds"

  kafka-3:
    <<: *kafka-common
    container_name: kafka-3
    hostname: kafka-3
    depends_on:
      - zookeeper
    ports:
      - "9292:9292"
      - "9293:9293"
      - "9294:9294"
    volumes:
      - data-kafka-3:/var/lib/kafka/data
      - ./sasl-ssl-properties/kafka-creds/kafka-3/sasl:/etc/kafka/jaas
      - ./sasl-ssl-properties/kafka-creds/kafka-3/certs:/etc/kafka/secrets
    environment:
      <<: *kafka-common-env
      KAFKA_BROKER_ID: 3
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9292,INTERNAL_SASL_SSL://0.0.0.0:9293,EXTERNAL_SASL_SSL://0.0.0.0:9294
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9292,INTERNAL_SASL_SSL://kafka-3:9293,EXTERNAL_SASL_SSL://localhost:9294
      KAFKA_SSL_KEYSTORE_FILENAME: "kafka-3.keystore.jks"
      KAFKA_SSL_KEYSTORE_CREDENTIALS: "kafka-3_keystore_creds"
      KAFKA_SSL_KEY_CREDENTIALS: "kafka-3_sslkey_creds"
      KAFKA_SSL_TRUSTSTORE_FILENAME: "kafka-3.truststore.jks"
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: "kafka-3_truststore_creds"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    hostname: kafka-ui
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "Main-Cluster"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:9093
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: SASL_SSL
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM: PLAIN
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG: >
        org.apache.kafka.common.security.plain.PlainLoginModule required
        username="user" password="user-secret";
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_TRUSTSTORE_LOCATION: /truststore/kafka-1.truststore.jks
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_TRUSTSTORE_PASSWORD: your-password
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_TRUSTSTORE_TYPE: JKS
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
    volumes:
      - ./sasl-ssl-properties/kafka-creds/kafka-1/certs:/truststore
    networks:
      - confluent

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - confluent

volumes:
  data-zookeeper-log-1:
  data-zookeeper-data-1:
  data-kafka-1:
  data-kafka-2:
  data-kafka-3:
  postgres_data:

networks:
  confluent: